" Space as leader
let mapleader=" "

" replace currently selected text with default register without yanking it
vnoremap p "_dP

" Highlight on yank - Cyan 
let g:highlightedyank_highlight_duration = "500"
let g:highlightedyank_highlight_color = "rgba(57, 197, 187, 155)"


" NerdTree
nnoremap<Leader>e :NERDTreeToggle<CR>
nnoremap<leader>f :NERDTreeFocus<CR>

noremap [ :action MethodDown<CR>
noremap ] :action MethodUp<CR>

" Ctrl s save
nnoremap <C-s> :w<CR>

nnoremap <leader>d  "_d<CR>
vnoremap <leader>d "_d<CR>

nnoremap <leader>bC :bd! +<CR>
" play a macro recorded to register q
nnoremap Q @q

" move by screen line instead of file line
nnoremap j gj
nnoremap k gk

" Y should yank to EOL
map Y y$
" Toggle breakpoint
nnoremap <leader>mdb    :action ToggleLineBreakpoint<CR>
vnoremap <leader>mdb    <Esc>:action ToggleLineBreakpoint<CR>

" Clear breakpoints 
nnoremap <leader>mdC    :action Debugger.RemoveAllBreakpointsInFile<CR>
vnoremap <leader>mdC    <Esc>:action Debugger.RemoveAllBreakpointsInFile<CR>

" File paths
nnoremap <leader>fyy    :action CopyPaths<CR>
vnoremap <leader>fyy    <Esc>:action CopyPaths<CR>

" Find files
nnoremap <leader>ff    :action GotoFile<CR>
vnoremap <leader>ff    <Esc>:action GotoFile<CR>
nnoremap <leader>fF    :action GotoFile<CR>
vnoremap <leader>fF    <Esc>:action GotoFile<CR>

" Copy whole buffer
nnoremap <leader>bY    :%y<CR>
vnoremap <leader>bY    <Esc>:%y<CR>

" Next Tab
nnoremap L    :action NextTab<CR>
vnoremap L    <Esc>:action NextTab<CR>

" Prev Tab
nnoremap  H   :action PreviousTab<CR>
vnoremap  H   <Esc>:action PreviousTab<CR>

" Jj on Insert to exit
imap jj <Esc>

" Format Code
nnoremap <leader>fb :action ReformatCode<CR>

" Multiple windows + navigation
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-h> <c-w>h
nnoremap <c-k> <c-w>k
nnoremap <C-w>x :action MoveTabDown<CR>
nnoremap <C-w>v :action MoveTabRight<CR>
nnoremap <C-w>X :action SplitHorizontally<CR>
nnoremap <C-w>V :action SplitVertically<CR>
nnoremap <C-w>u :action Unsplit<CR>
nnoremap <C-w>q :q<CR>
nnoremap <C-w>U :action UnsplitAll<CR>
nnoremap <C-w>Q :action CloseAllEditorsButActive<CR>

"Pins
nnoremap <leader>bp :action PinActiveTab<CR>
nnoremap <leader>bC :action CloseAllUnpinnedEditors<CR>

" Ace Jump
nmap s :action AceAction<CR>
nmap <Space>l :action AceLineAction<CR>
nmap <Space>t :action AceTargetAction<CR>

"Quick JavaDoc is actually Quick Definition for any language. What the fuck??
map <leader>qd :action QuickJavaDoc<CR>

" Source .ideavim
nnoremap <leader>sa :source ~/.ideavimrc<CR>

"mark as a global mark/
nnoremap ma mA
nnoremap mb mB
nnoremap mc mC
nnoremap md mD
nnoremap me mE
nnoremap mf mG
nnoremap mh mH
nnoremap mi mI
nnoremap mj mJ
nnoremap mk mK
nnoremap ml mL
nnoremap mm mM
nnoremap mn mN
nnoremap mo mO
nnoremap mp mP
nnoremap mq mQ
nnoremap mr mR
nnoremap ms mS
nnoremap mt mT
nnoremap mu mU
nnoremap mv mV
nnoremap mw mW
nnoremap mx mX
nnoremap my mY
nnoremap mz mZ

"go to global marks
nnoremap 'a `A
nnoremap 'b `B
nnoremap 'c `C
nnoremap 'd `D
nnoremap 'e `E
nnoremap 'f `G
nnoremap 'h `H
nnoremap 'i `I
nnoremap 'j `J
nnoremap 'k `K
nnoremap 'l `L
nnoremap 'm `M
nnoremap 'n `N
nnoremap 'o `O
nnoremap 'p `P
nnoremap 'q `Q
nnoremap 'r `R
nnoremap 's `S
nnoremap 't `T
nnoremap 'u `U
nnoremap 'v `V
nnoremap 'w `W
nnoremap 'x `X
nnoremap 'y `Y
nnoremap 'z `Z

nnoremap <leader>mc :delmarks A-Z0-9<CR>

" Set cfg
set smartcase
set incsearch
set multicursor
set sneak
set quickscope
set surround
set number
set relativenumber
set NERDTree
set clipboard+=unnamedplus
set showmode
set highlightedyank
set which-key
set notimeout
set smartindent
set so=999
set belloff=all
set visualbell
set t_vb=
set ignorecase
set matchit
set nohlsearch
